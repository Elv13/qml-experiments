#include "qmlwindow.h"

#include <QtDeclarative/QDeclarativeView>
#include <QtDeclarative/QDeclarativeEngine>
#include <QtDeclarative/QDeclarativeContext>
#include <QtDeclarative>
#include <QDBusAbstractAdaptor>

#include <QDirModel>

#include "qtsflphone/callmodel.h"
#include "qtsflphone/historymodel.h"
#include "qtsflphone/accountlistmodel.h"
#include "qtsflphone/audiocodecmodel.h"


// A simple main window widget pre-generated by qt creator
QmlWindow::QmlWindow(QWidget *parent)
    : QMainWindow(parent)
{
    //model = new SimpleListModel(this);
    CallModel::instance();

    view = new QDeclarativeView(this);
    setCentralWidget(view);
    qmlRegisterType<AudioCodecModel>("QtQuick", 1, 0, "AudioCodecModel");
    qmlRegisterType<VideoCodecModel>("QtQuick", 1, 0, "VideoCodecModel");
    qmlRegisterType<Account>("QtQuick", 1, 0, "Account");
    //qmlRegisterType<AccountListModel>("QtQuick", 1, 0, "AccountListModel");
    view->engine()->rootContext()->setContextProperty("CallModel",CallModel::instance());
    view->engine()->rootContext()->setContextProperty("HistoryModel",HistoryModel::instance());
    view->engine()->rootContext()->setContextProperty("AccountListModel",AccountListModel::instance());


    view->setSource(QUrl("/home/etudiant/dev/testqml10/qml/testqml10/main.qml"));
}
// #include "qmlwindow.moc"
// #include "moc_qmlwindow.cxx"
